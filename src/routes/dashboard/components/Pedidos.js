import React from 'react';
import { connect } from 'react-redux';
import Icon from '@ant-design/icons';
import { message } from 'antd';
import queryString from 'query-string';
import { api } from '../api';
import firebase from '../../../firebase';

class Pedidos extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      q: '',
      data: 0,
      loading: false,
    }
  }

  async componentDidMount() {
    try {
      this.fetch()
      const messaging = firebase.messaging();
      const token = await messaging.getToken();
      
      sessionStorage.setItem("token_admin", token);

      // Envia Token
      if (token && token.length > 0) {
      const response = await api.token.enviar({
        token: token
      });
      if (response.status === "success") {
      } else {
        message.error(response.message, 7);
      }
      }

      messaging.onMessage(async (payload) => {
      const primerPlano = payload;
      await this.setState({ primerPlano },()=>{
        if(this.state.primerPlano){
          this.fetch();
        }
      });
      });
    } catch (error) {
      message.error(error)
    }
  }

  fetch = async (params = {}) => {
    this.setState({ loading: true });
    try {
      const response = await api.pedidos.getCantidad_EnPreparacion(queryString.stringify({
        estado: 3
      }))
      if (response.status === "success") {
        this.setState({
          loading: false,
          data: response.data.registros || 0,
        });
      } else {
        this.setState({
          loading: false,
          data: 0,
        });
        message.error(response.message, 5);
      }
    } catch (e) {
      this.setState({
        loading: false,
        data: [],
      });
      message.error(e.toString(), 5);
    }
  }

  render() {
    const motoSvg = () => (
      <svg viewBox="0 0 1024 1024" width="1em" height="1em" fill="currentColor">
        <path d="M216.7 567.1c-70.6-5.899999999999977-133.39999999999998 41.19999999999993-149.89999999999998 110.19999999999993-1.5000000000000142 6.300000000000068-2.900000000000013 12.600000000000023-4.300000000000011 18.90000000000009v27.59999999999991c1 4.7000000000000455 2.0999999999999943 9.300000000000068 3 14 14.700000000000003 74.20000000000005 85.30000000000001 124.70000000000005 159.7 114.20000000000005 79.69999999999999-11.200000000000045 134.60000000000002-83.39999999999998 122.30000000000001-163.20000000000005-11.100000000000023-72.29999999999995-66.10000000000002-116.29999999999995-130.8-121.69999999999993z m-10.399999999999977 236.79999999999995c-51.60000000000002 0.3000000000000682-93.50000000000001-41.299999999999955-93.9-93.5-0.5-51.69999999999993 40.900000000000006-93.5 93.19999999999999-94.19999999999993 50.900000000000006-0.7000000000000455 93.79999999999998 41.09999999999991 94.20000000000002 91.59999999999991 0.39999999999997726 53.80000000000007-40.400000000000034 95.70000000000005-93.5 96.10000000000002z m262.8-559.2c-18.400000000000034 2.6000000000000796-36.5 5.10000000000008-55 7.700000000000074v49.70000000000002c15-3.6000000000000227 31.599999999999966 0.19999999999998863 43.299999999999955-13.400000000000034 1.6000000000000227-1.8000000000000114 3.8000000000000114-3 5.7000000000000455-4.5 19.399999999999977-14.099999999999966 40.599999999999966-23.099999999999966 65.10000000000002-18.80000000000001 11.199999999999932 2 22 6.5 33.799999999999955 10.100000000000023 15.600000000000023-24.19999999999999 18.600000000000023-50.30000000000001 7.2999999999999545-78-9.799999999999955-24.19999999999999-25-42.5-52-48.099999999999994-6.999999999999943-1.5-14.199999999999932-2.4000000000000057-21.299999999999955-3.5h-8.699999999999989c-1.5 0.5-3 1.1999999999999886-4.600000000000023 1.5999999999999943-20.69999999999999 4.400000000000006-40 11.699999999999989-54 28.69999999999999-9.099999999999966 11-14.199999999999989 23.700000000000017-15.399999999999977 38.80000000000001 19.099999999999966-3.0999999999999943 37.19999999999999-6.099999999999994 55.80000000000001-9.199999999999989v38.89999999999998z m171 437.70000000000005c7.199999999999932-57.19999999999993 36.5-97.39999999999998 91.60000000000002-117.19999999999993 35.89999999999998-12.900000000000091 73.29999999999995-14.900000000000091 111-14.5 2.599999999999909 0 6.099999999999909-0.40000000000009095 7.7999999999999545-2.1000000000000227 12-11.800000000000068 13.899999999999977-33.5 4.600000000000023-47-2.800000000000068-4.100000000000023-6.100000000000023-6.100000000000023-11.399999999999977-6-26.200000000000045 0.2999999999999545-52.40000000000009 0.0999999999999659-78.60000000000002 0.0999999999999659h-54c-9.100000000000023-28.19999999999999-30.800000000000068-47.099999999999966-45.60000000000002-71.19999999999999-2.2000000000000455 1.5-3.3999999999999773 2.3000000000000114-4.5 3.1999999999999886-27.299999999999955 21.30000000000001-54.60000000000002 42.60000000000002-81.79999999999995 64.10000000000002-4.400000000000091 3.5-8.700000000000045 5.199999999999989-14.5 5.099999999999966-24.700000000000045-0.39999999999997726-49.5-0.2999999999999545-74.20000000000005-0.5-15.300000000000011-0.0999999999999659-30.5-0.2999999999999545-45.80000000000001-0.5999999999999659-18.30000000000001-0.30000000000001137-29.599999999999966 7.699999999999989-35.099999999999966 25.400000000000034-0.6000000000000227 2-1.2000000000000455 4-2 6.5-31-11.800000000000068-57.60000000000002-28.100000000000023-73.20000000000005-58.60000000000002 47.200000000000045-36.10000000000002 93.80000000000001-71.80000000000001 140.60000000000002-107.70000000000005 30.19999999999999 42 60.200000000000045 83.70000000000005 90.29999999999995 125.60000000000002 31.700000000000045-23.69999999999999 62.90000000000009-47.10000000000002 94-70.39999999999998-11.699999999999932-15.700000000000045-22.5-30.900000000000034-34-45.60000000000002-20.399999999999977-26.19999999999999-40.09999999999991-53-62-77.89999999999998-19.59999999999991-22.30000000000001-61.099999999999966-24.200000000000045-84.79999999999995-6.300000000000011-46.39999999999998 35.099999999999966-92.80000000000001 70.19999999999999-139.2 105.19999999999999-6.100000000000023 4.600000000000023-12.300000000000011 9.199999999999989-19.30000000000001 14.300000000000011-0.8999999999999773-8.900000000000034-1.6000000000000227-16.69999999999999-2.5-26.19999999999999-32.10000000000002 13-63 25.399999999999977-93.69999999999999 38.299999999999955-7.5 3.2000000000000455-14.300000000000011 8.200000000000045-20.900000000000006 13-22.30000000000001 16.5-33.80000000000001 38.200000000000045-31 66.40000000000003 1.6999999999999886 17.80000000000001 8.099999999999994 34.30000000000001 16.19999999999999 50.099999999999966 1 1.8999999999999773 4.5 3.300000000000068 7 3.6000000000000227 10.800000000000011 1.2999999999999545 21.80000000000001 1.5 32.5 3.2000000000000455 41.00000000000003 6.699999999999932 75.50000000000003 25.09999999999991 101.1 58.5 20 26.09999999999991 32.400000000000034 55.799999999999955 38.400000000000034 87.59999999999991 3.099999999999966 16.600000000000023 12.699999999999989 26 25.599999999999966 33.80000000000007 6.199999999999989 3.699999999999932 12.900000000000034 6.699999999999932 19.600000000000023 9.299999999999955 30.80000000000001 11.700000000000045 63.099999999999966 14.600000000000023 95.59999999999997 15.600000000000023 37.80000000000007 1.2000000000000455 75.60000000000002 1.1000000000000227 113.39999999999998 1.6000000000000227 6.7000000000000455 0.10000000000002274 13.400000000000091 0 20 0 0-2.5 0.20000000000004547-4.2000000000000455 0-5.899999999999977-3.5-24-4.199999999999932-48.40000000000009-1.1999999999999318-72.80000000000007z m154.69999999999993-115.5c-77.79999999999995 0.3000000000000682-141.69999999999993 58.30000000000007-143.79999999999995 139.60000000000002-2.2000000000000455 82 62.39999999999998 146.89999999999998 143 147.20000000000005 78.20000000000005 0.2999999999999545 143.29999999999995-64.70000000000005 143.60000000000002-143.4000000000001 0.1999999999999318-77.89999999999998-64.60000000000002-143.69999999999993-142.80000000000007-143.39999999999998z m-0.8999999999999773 237c-52.10000000000002 0-93.69999999999993-41.60000000000002-93.60000000000002-93.79999999999995 0.10000000000002274-52.200000000000045 41.60000000000002-93.70000000000005 93.80000000000007-93.60000000000002 52.299999999999955 0.10000000000002274 93.60000000000002 41.39999999999998 93.60000000000002 93.79999999999995 0 52.200000000000045-41.5 93.60000000000002-93.80000000000007 93.60000000000002z" />
      </svg>
    )
    const MotoIcon = props => <Icon component={motoSvg} {...props} />;
    return (
      <div className="container-fluid no-breadcrumb pr-0 pl-0 pt-0 pb-0 mb-4">
        <div className="row">
          <div className="col-xl-3 mb-4">
            <div className="number-card-v1">
              <div className="card-top">
                <MotoIcon style={{ fontSize: '50px', color: '#007d06' }} />
              </div>
              <div className="card-info">
                <div className="tipo-link" onClick={() => { window.open("#/admin/pedidos", "_self") }}><span>Pedidos a entregar</span></div>
              </div>
              <div className="card-bottom">
                <span className="h2">{this.state.data ? this.state.data : 0}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
}

const mapStateToProps = (state, ownProps) => {
  return {
    user: state.user,
  }
};

export default connect(
  mapStateToProps
)(Pedidos);
